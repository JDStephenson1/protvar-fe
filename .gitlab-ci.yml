stages:
  - test
  - build_static_assets
  - build_docker_image
  - deploy

variables:
  CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:latest

.js:
  image: node:15
  before_script:
    - node --version
    - npm --version
    - yarn --version
    - pwd
    - ls
    - npm install

test:
  stage: test
  extends: .js
  script:
    - npm run test

build_static_assets:
  extends: .js
  stage: build_static_assets
  script:
    - npm run dev-build
  artifacts:
    paths:
      - build/

build_docker_image:
  stage: build_docker_image
  image: docker:latest
  tags:
    - dind
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker --version
    - echo ${CONTAINER_IMAGE}
  script:
    - docker build -t ${CONTAINER_IMAGE} --no-cache .
    - docker image ls
    - docker push ${CONTAINER_IMAGE}
    - docker rmi ${CONTAINER_IMAGE}
    - docker logout "$CI_REGISTRY"

deploy:
  extends: .js
  stage: deploy
  script:
    - ls /nfs/public/rw/uniprot/pepvep/www/
    - ssh uni_ci@noah-login "ls /nfs/public/rw/uniprot/pepvep/www/"
    - ssh uni_admin@noah-login "rm /nfs/public/rw/uniprot/pepvep/www/*"
    - scp -r build/* uni_admin@noah-login:/nfs/public/rw/uniprot/pepvep/www/